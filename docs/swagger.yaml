basePath: /
definitions:
  dto.AuthorCreateDTO:
    properties:
      name:
        type: string
    type: object
  dto.AuthorViewDTO:
    properties:
      books:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
    type: object
  dto.BookCreateDTO:
    properties:
      author:
        type: string
      genre:
        type: string
      title:
        type: string
    type: object
  dto.BookViewDTO:
    properties:
      author:
        type: string
      genre:
        type: string
      id:
        type: string
      published_at:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for managing a library.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Library API
  version: "1.0"
paths:
  /authors:
    get:
      description: Get a list of all authors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AuthorViewDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all authors
      tags:
      - authors
    post:
      consumes:
      - application/json
      description: Create a new author with the input payload
      parameters:
      - description: Author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/dto.AuthorCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.AuthorCreateDTO'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new author
      tags:
      - authors
  /authors/{id}:
    delete:
      description: Delete a author by ID
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a author by ID
      tags:
      - authors
    get:
      description: Get details of a author by ID
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthorViewDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a author by ID
      tags:
      - authors
    put:
      consumes:
      - application/json
      description: Update details of a author by ID
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      - description: Author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/dto.AuthorCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthorCreateDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a author by ID
      tags:
      - authors
  /books:
    get:
      description: Get a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.BookViewDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with the input payload
      parameters:
      - description: Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.BookCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BookCreateDTO'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a book by ID
      tags:
      - books
    get:
      description: Get details of a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookViewDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update details of a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.BookCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookCreateDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a book by ID
      tags:
      - books
swagger: "2.0"
